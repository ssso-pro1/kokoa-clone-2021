#chat-screen {
  background-color: #abc1d1;
  height: 500vh;
}
#chat-screen .status-bar,
#chat-screen .alt-header {
  top: 0;
  position: fixed;
  width: 100%;
  background-color: #abc1d1;
  box-sizing: border-box;
  /* 아래의 내용이 스크롤될 때 2개의 아래로 들어가도록! */
}

#chat-screen .status-bar {
  z-index: 2;
}

#chat-screen .alt-header {
  top: 10px;
  z-index: 1;
}
/* z-index: absolute, fixed position에서 사용가능 */

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.main-chat {
  margin-top: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s linear;
}

.chat__timestamp {
  color: white;
  background-color: grey;
  padding: 15px;
  font-size: 14px;
  border-radius: 25px;
  margin-bottom: 25px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}

.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 15px;
  margin-right: 10px;
}

.message__author {
  margin-bottom: 5px;
  display: block;
  /* margin주기 위해 block 으로 */
}

.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  margin-right: 5px;
}

.message__author,
.message__time {
  opacity: 0.8;
  font-size: 15px;
}

.message__info {
  display: flex;
  align-items: flex-end;
}

.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-right-radius: 0px;
  border-top-left-radius: 15px;
  margin-right: 0px;
  margin-left: 5px;
}

/* message__info : display: flex로 되어있음 
  -> order 기능은 flex children 에만 적용가능 */
/* but 코드가 많이 필요하기 때문에 order 대신 row-reverse 사용가능 */

/* .message-row--own .message__bubble {
  order: 1;
}

.message-row--own .message__time {
  order: 0;
} */

.message-row--own .message__info {
  flex-direction: row-reverse;
}

.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  align-items: center;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}

/* first, second child (column)에 width 를 주기 위해서 input에 먼저 width부여 */
.reply input {
  padding: 12px;
  width: 100%;
  border: var(--main-border);
  border-radius: 20px;
  transition: all 0.3s ease-in-out;
}

.reply .reply__column:first-child {
  width: 10%;
}

.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}

.reply i {
  opacity: 0.5;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: -3px;
  top: 2px;
}

.reply__column:last-child > i {
  right: 40px;
  top: 10px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 30px;
  height: 30px;
  border-radius: 14px;
}

.reply__column button i {
  opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile-beam,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

/* .@:focus-within: reply내부에 어떤 요소가 focus되어있다면
   : focus되면 ~first-child에 속성 부여 */
/* reply(father) knows when children is focused */
.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-beam,
.reply:focus-within button {
  opacity: 0;
}

/* .reply:focus-within input { */
.reply input:focus {
  width: 98vw;
  transform: translateX(-10%) translateY(-80px);
}
/* 여기서 transform 잘되는 것 : input 에 transition이 명시돼있어서! */
/* 위에서 translateY 한 이유 : 아래에 내려가게 해놔서 다시 올라오도록 해야함 */

.reply:focus-within {
  /* bottom: -50px; */
  transform: translateY(80px);
}
